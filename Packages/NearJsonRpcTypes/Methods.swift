// Generated by NEAR Protocol Swift Type Generator
// Do not edit manually - Generated from OpenAPI specification
// Generated on: 2025-10-05 02:29:14 +0000

import Foundation
/// Available RPC methods for NEAR Protocol
public enum RpcMethod: String, CaseIterable {
case EXPERIMENTAL_changes = "EXPERIMENTAL_changes"
case EXPERIMENTAL_changes_in_block = "EXPERIMENTAL_changes_in_block"
case EXPERIMENTAL_congestion_level = "EXPERIMENTAL_congestion_level"
case EXPERIMENTAL_genesis_config = "EXPERIMENTAL_genesis_config"
case EXPERIMENTAL_light_client_block_proof = "EXPERIMENTAL_light_client_block_proof"
case EXPERIMENTAL_light_client_proof = "EXPERIMENTAL_light_client_proof"
case EXPERIMENTAL_maintenance_windows = "EXPERIMENTAL_maintenance_windows"
case EXPERIMENTAL_protocol_config = "EXPERIMENTAL_protocol_config"
case EXPERIMENTAL_receipt = "EXPERIMENTAL_receipt"
case EXPERIMENTAL_split_storage_info = "EXPERIMENTAL_split_storage_info"
case EXPERIMENTAL_tx_status = "EXPERIMENTAL_tx_status"
case EXPERIMENTAL_validators_ordered = "EXPERIMENTAL_validators_ordered"
case block = "block"
case block_effects = "block_effects"
case broadcast_tx_async = "broadcast_tx_async"
case broadcast_tx_commit = "broadcast_tx_commit"
case changes = "changes"
case chunk = "chunk"
case client_config = "client_config"
case gas_price = "gas_price"
case genesis_config = "genesis_config"
case health = "health"
case light_client_proof = "light_client_proof"
case maintenance_windows = "maintenance_windows"
case network_info = "network_info"
case next_light_client_block = "next_light_client_block"
case query = "query"
case send_tx = "send_tx"
case status = "status"
case tx = "tx"
case validators = "validators"
    /// All available RPC method names
    public static let allMethods = RpcMethod.allCases.map { $0.rawValue }
}

/// Path to method mapping from OpenAPI specification
public let PATH_TO_METHOD_MAP: [String: String] = [
    "/EXPERIMENTAL_changes": "EXPERIMENTAL_changes",
    "/EXPERIMENTAL_changes_in_block": "EXPERIMENTAL_changes_in_block",
    "/EXPERIMENTAL_congestion_level": "EXPERIMENTAL_congestion_level",
    "/EXPERIMENTAL_genesis_config": "EXPERIMENTAL_genesis_config",
    "/EXPERIMENTAL_light_client_block_proof": "EXPERIMENTAL_light_client_block_proof",
    "/EXPERIMENTAL_light_client_proof": "EXPERIMENTAL_light_client_proof",
    "/EXPERIMENTAL_maintenance_windows": "EXPERIMENTAL_maintenance_windows",
    "/EXPERIMENTAL_protocol_config": "EXPERIMENTAL_protocol_config",
    "/EXPERIMENTAL_receipt": "EXPERIMENTAL_receipt",
    "/EXPERIMENTAL_split_storage_info": "EXPERIMENTAL_split_storage_info",
    "/EXPERIMENTAL_tx_status": "EXPERIMENTAL_tx_status",
    "/EXPERIMENTAL_validators_ordered": "EXPERIMENTAL_validators_ordered",
    "/block": "block",
    "/block_effects": "block_effects",
    "/broadcast_tx_async": "broadcast_tx_async",
    "/broadcast_tx_commit": "broadcast_tx_commit",
    "/changes": "changes",
    "/chunk": "chunk",
    "/client_config": "client_config",
    "/gas_price": "gas_price",
    "/genesis_config": "genesis_config",
    "/health": "health",
    "/light_client_proof": "light_client_proof",
    "/maintenance_windows": "maintenance_windows",
    "/network_info": "network_info",
    "/next_light_client_block": "next_light_client_block",
    "/query": "query",
    "/send_tx": "send_tx",
    "/status": "status",
    "/tx": "tx",
    "/validators": "validators",
]
